{"version":3,"sources":["utils/index.ts","utils/constants.ts","utils/routes.ts","utils/helpers.ts","utils/Hooks.ts","utils/Auth.ts","utils/Api.ts","assets/img/placeholder.png","components/Common/Header.tsx","components/Common/Button.tsx","components/Common/URLNotFound.tsx","components/Common/Spinner.tsx","components/Common/Icons.tsx","components/Start/Start.tsx","components/Start/Host.tsx","components/Start/Join.tsx","components/Start/TextInput.tsx","components/Start/Redirect.tsx","components/Search/SearchInput.tsx","components/Search/SearchResults.tsx","components/Search/Search.tsx","components/Host/Host.tsx","components/Host/TrackList.tsx","components/Host/Player.tsx","components/Host/Image.tsx","utils/Spotify.ts","components/Spectator/Spectator.tsx","components/Spectator/TrackList.tsx","components/Login/Login.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["BASE_URL","process","SOCKET_URL","HOST_URL","SEARCH_URL","VALIDATE_ROOM_URL","AUTHORIZE_URL","REQUEST_TOKEN_URL","REFRESH_TOKEN_URL","GET_QUEUE_URL","ADD_TRACK_TO_QUEUE_URL","REMOVE_TRACK_FROM_QUEUE_URL","SPOTIFY_PLAYER_RECOMMENDATION_URL","SPOIFY_BASE_URL","SPOTIFY_PLAYER_BASE_URL","SPOTIFY_PLAYER_PLAY_URL","SPOTIFY_PLAYER_PAUSE_URL","SPOTIFY_PLAYER_NEXT_TRACK_URL","SPOTIFY_PLAYER_PREVIOUS_TRACK_URL","SPOTIFY_PLAYER_SEEK_URL","SPOTIFY_PLAYER_GET_DEVICES_URL","SPOTIFY_PLAYER_SET_DEVICE_URL","SPOTIFY_USER_TOKEN","VOTED_TRACKS","LAST_PLAYED_TRACK","START","ROOM","LOGIN","HOST","REDIRECT","validateRoomID","s","length","includes","tokenHasExpired","token","expires_on","Date","now","Fetch","url","method","body","signal","fetch","credentials","headers","JSON","stringify","undefined","then","gatherResponse","catch","console","error","response","a","async","status","Error","json","setVote","id","vote","votes","getVotes","push","filter","v","localStorage","setItem","getItem","parse","setupLocalStorage","millisToMinutesAndSeconds","millis","minutes","Math","floor","seconds","useDebouncedInput","onUpdate","onCancel","useState","input","setInput","debouncedInput","value","delay","debouncedValue","setDebouncedValue","useEffect","handler","setTimeout","clearTimeout","useDebounce","handleInputChange","e","target","useSearch","searchInput","setSearchInput","searching","setSearching","api","useAPI","handleEscapePressed","key","document","addEventListener","removeEventListener","search","useAsyncAbortable","abortSignal","text","doSearchTrack","cancelSearch","reset","searchUpdate","useWebSocket","queue","useQueue","history","useHistory","subscribers","setSubscribers","doValidateRoomID","isValid","doGetQueue","setTracks","doLeaveRoom","callbacks","n","addTrackToQueue","addedToQueue","removeTrackFromQueue","removedFromQueue","voted","doJoinRoom","tracks","setVotes","setVoteInStorage","useVotes","sort","b","addToQueue","track","doAddTrackToQueue","queue_id","removeFromQueue","doRemoveTrackFromQueue","t","log","doVoteForTrack","copy","index","findIndex","Auth","auth","roomId","doLogin","doSignOut","this","AuthContext","React","createContext","API","ws","host","window","roomID","inSession","connect","WebSocket","onopen","onclose","par","check","onerror","err","close","readyState","CLOSED","doSendMessage","type","payload","message","Message","interval","setInterval","OPEN","send","clearInterval","cb","onmessage","data","doAuthorizeUser","Promise","resolve","reject","doRefreshUserToken","left","screen","width","top","height","popup","open","location","href","res","replace","alert","doFetchUserToken","code","expires_in","refresh_token","newToken","doSetupRoom","query","room","APIContext","useContext","module","exports","Header","size","color","numSubscribers","className","onClick","goBack","Button","loading","URLNotFound","Dots","Close","viewBox","d","Next","x","y","Previous","transform","Shuffle","Connect","strokeWidth","strokeLinejoin","rx","cx","cy","r","Speaker","Phone","Computer","Play","Pause","PersonIcon","enableBackground","fill","stroke","strokeLinecap","strokeMiterlimit","Heart","HeartOutline","Start","onSelect","setError","setLoading","ROUTES","Host","isLoading","Join","inputVisible","setInputVisible","joinRef","useRef","createElement","handleSubmit","useCallback","handleClickOutside","current","contains","handleEnterPressed","ref","onChange","placeholder","visible","TextInput","Redirect","props","URLSearchParams","get","opener","tokenCallback","SearchInput","onSearchUpdate","inputRef","hasFocus","setFocus","handleCancel","blur","handleKeyPressed","tabIndex","onFocus","onBlur","SearchResults","onAddTrack","onRemoveTrack","map","queuedTracks","setQueuedTracks","Array","src","getArtwork","album_s","alt","title","artist","handleAddTrack","album","require","Search","children","css","result","match","params","useSpotify","playerState","controller","fetching","onDelete","onPlay","playTrack","TrackList","PLACEHOLDER_TRACK","Player","item","images","artists","name","state","renderPlayer","Overlay","showOverlay","setShowOverlay","DisabledController","isPlaying","onSeek","ms","onEnd","Controller","is_playing","setIsPlaying","handlePlayNextTrack","playSimilarTrack","changeTrack","togglePlayback","duration_ms","progress_ms","seekInPlayingTrack","PopUp","devices","device","is_restricted","is_active","disabled","getIcon","ConnectButton","isVisible","setIsVisible","setDevices","mounted","getDevices","setDevice","ControllButton","isCircled","renderIcon","ProgressBar","progress","setProgress","styles","tick","next","round","progressBar","currentTarget","progressBarWidth","offsetWidth","progressBarProgressClicked","clientX","getBoundingClientRect","progressInMs","style","OPTIONS","perspective","speed","max","Image","tilt","VanillaTilt","init","SpotifyPlayer","playerInterval","pollingCallback","abortController","pollPlayerState","getPlayerState","clearPolling","request","config","device_ids","uris","abort","AbortController","refreshToken","Authorization","access_token","initialFetch","setInitialFetch","spotify","setPlayerState","Spectator","memo","onVote","hasVoted","Login","App","basename","path","exact","component","Boolean","hostname","ReactDOM","render","Provider","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.d35e7e31.chunk.js","sourcesContent":["import * as ROUTES from './routes'\nexport { ROUTES }\nexport { useAuth, Auth, AuthContext } from './Auth'\nexport { useAPI, APIContext, API } from './Api'\nexport { validateRoomID, Fetch, tokenHasExpired, getVotes, setVote, millisToMinutesAndSeconds } from './helpers'\nexport { useDebounce, useDebouncedInput, useSearch, useWebSocket, useQueue } from './Hooks'\n\nexport {\n    AUTHORIZE_URL,\n    GET_QUEUE_URL,\n    HOST_URL,\n    VALIDATE_ROOM_URL,\n    SOCKET_URL,\n    SEARCH_URL,\n    REFRESH_TOKEN_URL,\n    REQUEST_TOKEN_URL,\n    SPOTIFY_USER_TOKEN,\n    ADD_TRACK_TO_QUEUE_URL,\n    REMOVE_TRACK_FROM_QUEUE_URL,\n    VOTED_TRACKS,\n    SPOTIFY_PLAYER_BASE_URL,\n    SPOTIFY_PLAYER_PLAY_URL,\n    SPOTIFY_PLAYER_NEXT_TRACK_URL,\n    SPOTIFY_PLAYER_PREVIOUS_TRACK_URL,\n    SPOTIFY_PLAYER_PAUSE_URL,\n    SPOTIFY_PLAYER_SEEK_URL,\n    SPOTIFY_PLAYER_RECOMMENDATION_URL,\n    LAST_PLAYED_TRACK,\n    SPOTIFY_PLAYER_GET_DEVICES_URL,\n    SPOTIFY_PLAYER_SET_DEVICE_URL,\n} from './constants'\nexport * from './types'\n","/* URLs */\nexport const BASE_URL = process.env.NODE_ENV === 'production' ? process.env.REACT_APP_BASE_URL : 'http://localhost:8081/'\nexport const SOCKET_URL = process.env.NODE_ENV === 'production' ? process.env.REACT_APP_WS_URL : 'ws://localhost:8081'\nexport const HOST_URL = BASE_URL + 'host'\nexport const SEARCH_URL = BASE_URL + 'search'\nexport const VALIDATE_ROOM_URL = BASE_URL + 'validate'\nexport const AUTHORIZE_URL = BASE_URL + 'authorize'\nexport const REQUEST_TOKEN_URL = BASE_URL + 'token'\nexport const REFRESH_TOKEN_URL = BASE_URL + 'refresh'\nexport const GET_QUEUE_URL = BASE_URL + 'get-queue'\nexport const ADD_TRACK_TO_QUEUE_URL = BASE_URL + 'add-to-queue'\nexport const REMOVE_TRACK_FROM_QUEUE_URL = BASE_URL + 'remove-from-queue'\n\n/* Spotify API */\nexport const SPOIFY_BASE_URL = 'https://api.spotify.com/v1'\nexport const SPOTIFY_PLAYER_RECOMMENDATION_URL = SPOIFY_BASE_URL + '/recommendations'\nexport const SPOTIFY_PLAYER_BASE_URL = SPOIFY_BASE_URL + '/me/player'\nexport const SPOTIFY_PLAYER_PLAY_URL = SPOTIFY_PLAYER_BASE_URL + '/play'\nexport const SPOTIFY_PLAYER_PAUSE_URL = SPOTIFY_PLAYER_BASE_URL + '/pause'\nexport const SPOTIFY_PLAYER_NEXT_TRACK_URL = SPOTIFY_PLAYER_BASE_URL + '/next'\nexport const SPOTIFY_PLAYER_PREVIOUS_TRACK_URL = SPOTIFY_PLAYER_BASE_URL + '/previous'\nexport const SPOTIFY_PLAYER_SEEK_URL = SPOTIFY_PLAYER_BASE_URL + '/seek'\nexport const SPOTIFY_PLAYER_GET_DEVICES_URL = SPOTIFY_PLAYER_BASE_URL + '/devices'\nexport const SPOTIFY_PLAYER_SET_DEVICE_URL = SPOTIFY_PLAYER_BASE_URL\n\n/* Localstorage */\nexport const SPOTIFY_USER_TOKEN = 'spotify_user_token'\nexport const VOTED_TRACKS = 'votes'\nexport const LAST_PLAYED_TRACK = 'last_played_track'\n","export const START = '/'\nexport const ROOM = '/room/:id'\nexport const LOGIN = '/login'\nexport const HOST = '/host/:id'\nexport const REDIRECT = '/redirect'\n\n// export type routeType = START | ROOM | LOGIN\n","import { SpotifyToken } from './types'\nimport { VOTED_TRACKS } from './constants'\n\nexport const validateRoomID = (s: string): boolean => {\n    // return s.length === 6 && Number.isInteger(Number(s.substr(1, 6))) && !s.includes(' ')\n    return s.length === 6 && !s.includes(' ')\n}\n\nexport const tokenHasExpired = (token: SpotifyToken): boolean => {\n    return token.expires_on < Date.now()\n}\n\nexport const Fetch = (url: string, method: string = 'GET', body?: any, signal?: AbortSignal) =>\n    fetch(url, {\n        signal,\n        method,\n        credentials: 'include',\n        headers: { 'Content-Type': 'application/json' },\n        body: body ? JSON.stringify(body) : undefined,\n    })\n        .then(gatherResponse)\n        .catch(console.error)\n\nasync function gatherResponse(response: any): Promise<any> {\n    if (response.status !== 200) {\n        throw new Error('Bad status = ' + response.status)\n    }\n    return await response.json()\n\n    // const { headers } = response\n    // const contentType = headers.get('content-type')\n    // if (contentType.includes('application/json')) {\n    //     return await response.json()\n    // } else if (contentType.includes('application/text')) {\n    //     return await response.json()\n    // } else if (contentType.includes('text/html')) {\n    //     return await response.json()\n    // } else {\n    //     return await response.json()\n    // }\n}\n\nexport const setVote = (id: string, vote: boolean) => {\n    let votes = getVotes()\n    if (vote) votes.push(id)\n    else votes = votes.filter(v => v !== id)\n    localStorage.setItem(VOTED_TRACKS, JSON.stringify(votes))\n}\n\nexport const getVotes = () => {\n    const votes = localStorage.getItem(VOTED_TRACKS)\n    if (!votes) {\n        setupLocalStorage()\n        return []\n    }\n    return JSON.parse(votes)\n}\n\nconst setupLocalStorage = () => {\n    localStorage.setItem(VOTED_TRACKS, JSON.stringify([]))\n}\n\nexport function millisToMinutesAndSeconds(millis) {\n    const minutes = Math.floor(millis / 60000)\n    const seconds = Math.floor((millis % 60000) / 1000)\n    return seconds === 60 ? `${minutes + 1}:00` : `${minutes}:${(seconds < 10 ? '0' : '') + seconds}`\n}\n","import { useState, useEffect } from 'react'\nimport { useAsyncAbortable } from 'react-async-hook'\nimport { useHistory } from 'react-router-dom'\nimport { useAPI, TrackType, getVotes, setVote as setVoteInStorage } from './'\n\nexport function useDebounce(value: string, delay: number) {\n    const [debouncedValue, setDebouncedValue] = useState(value)\n    useEffect(() => {\n        const handler = setTimeout(() => {\n            setDebouncedValue(value)\n        }, delay)\n        return () => {\n            clearTimeout(handler)\n        }\n    }, [value, delay])\n\n    return debouncedValue\n}\n\nexport const useDebouncedInput = (onUpdate: any, onCancel: any) => {\n    const [input, setInput] = useState('')\n    const debouncedInput = useDebounce(input, 500)\n\n    const handleInputChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n        if (input === '' && e.target.value.length > 0) {\n            onUpdate(e.target.value)\n        } else if (e.target.value.length === 0) {\n            onCancel()\n        }\n        setInput(e.target.value)\n    }\n\n    useEffect(() => {\n        if (debouncedInput) {\n            onUpdate(debouncedInput)\n        }\n    }, [debouncedInput, onUpdate])\n\n    return { input, setInput, handleInputChange }\n}\n\nexport const useSearch = () => {\n    const [searchInput, setSearchInput] = useState('')\n    const [searching, setSearching] = useState(false)\n    const api = useAPI()\n\n    const handleCancelSearch = () => {\n        setSearching(false)\n        search.reset()\n    }\n\n    const handleSearchUpdate = (input: string) => {\n        setSearchInput(input)\n        if (!searching) setSearching(true)\n    }\n\n    useEffect(() => {\n        const handleEscapePressed = (e: KeyboardEvent) => {\n            if (e.key === 'Escape' && searching) {\n                setSearching(false)\n            }\n        }\n        document.addEventListener('keydown', handleEscapePressed)\n        return () => {\n            document.removeEventListener('keydown', handleEscapePressed)\n        }\n    }, [searching])\n\n    const search = useAsyncAbortable(\n        async (abortSignal, text) => {\n            if (text.length === 0) {\n                return []\n            } else {\n                return api.doSearchTrack(text, abortSignal)\n            }\n        },\n        [searchInput],\n    )\n\n    return { searching, cancelSearch: handleCancelSearch, searchUpdate: handleSearchUpdate, search }\n}\n\nexport const useRoomValidation = () => {}\n\nexport const useWebSocket = (id: string) => {\n    const api = useAPI()\n    const queue = useQueue()\n    const history = useHistory()\n    const [subscribers, setSubscribers] = useState<number>(1)\n\n    useEffect(() => {\n        api.doValidateRoomID(id).then(isValid => {\n            if (isValid) api.doGetQueue().then(queue.setTracks)\n            else history.push('/not-found')\n        })\n        return () => api.doLeaveRoom()\n    }, [api, history, id, queue.setTracks])\n\n    useEffect(() => {\n        const callbacks = {\n            setSubscribers: (n: number) => setSubscribers(n),\n            addTrackToQueue: queue.addedToQueue,\n            removeTrackFromQueue: queue.removedFromQueue,\n            vote: queue.voted,\n        }\n        api.doJoinRoom(id, callbacks)\n    }, [queue.addedToQueue, queue.removedFromQueue, api, id, queue.voted])\n\n    return { subscribers, queue }\n}\n\nconst useVotes = () => {\n    const [votes, setVotes] = useState<string[]>([])\n    useEffect(() => {\n        setVotes(getVotes())\n    }, [])\n\n    const handleSetVote = (id: string, vote: boolean) => {\n        if (vote) setVotes([...votes, id])\n        else setVotes(votes.filter(v => v !== id))\n        setVoteInStorage(id, vote)\n    }\n\n    return { votes, setVotes: handleSetVote }\n}\n\nexport const useQueue = () => {\n    const [tracks, setTracks] = useState<TrackType[]>([])\n    const { votes, setVotes } = useVotes()\n    const api = useAPI()\n\n    const handleAddTrackToQueue = (track: TrackType) => {\n        api.doAddTrackToQueue(track.id).then(id => {\n            track.queue_id = id\n            setTracks([...tracks, track])\n            setVotes(id, true)\n        })\n    }\n\n    const handleTrackAddedToQueue = (track: TrackType) => {\n        setTracks([...tracks, track])\n    }\n\n    const handleRemoveTrackFromQueue = (id: string) => {\n        api.doRemoveTrackFromQueue(id)\n        setTracks(tracks.filter(t => t.queue_id !== id))\n        setVotes(id, false)\n    }\n\n    const handleTrackRemovedFromQueue = (id: string) => {\n        console.log('Removing from queue:', id)\n        setTracks(tracks.filter(t => t.queue_id !== id))\n    }\n\n    const handleVoteForTrack = (id: string, vote: boolean = true) => {\n        api.doVoteForTrack(id, vote)\n        const copy = [...tracks]\n        const index = copy.findIndex(t => t.queue_id === id)\n        copy[index].votes = copy[index].votes + (vote ? 1 : -1)\n        setTracks(copy)\n        setVotes(id, vote)\n    }\n\n    const handleReceivedVoteForTrack = (vote: { id: string; votes: number }) => {\n        const { id, votes } = vote\n        const copy = [...tracks]\n        const index = copy.findIndex(t => t.queue_id === id)\n        copy[index].votes = votes\n        setTracks(copy)\n    }\n\n    return {\n        // Probably anti-pattern to sort here, right?\n        // The queue can be sorted from firebase,\n        // but needs to be re-sorted on each vote\n        tracks: tracks ? tracks.sort((a, b) => b.votes - a.votes) : [],\n        addToQueue: handleAddTrackToQueue,\n        addedToQueue: handleTrackAddedToQueue,\n        removeFromQueue: handleRemoveTrackFromQueue,\n        removedFromQueue: handleTrackRemovedFromQueue,\n        vote: handleVoteForTrack,\n        voted: handleReceivedVoteForTrack,\n        votes,\n        setTracks,\n    }\n}\n","import React, { useContext } from 'react'\n\nexport interface AuthType {\n    auth: boolean\n    roomId: string\n    doLogin: () => void\n    doSignOut: () => void\n}\n\nexport class Auth implements AuthType {\n    auth: boolean\n    roomId: string\n\n    constructor() {\n        this.auth = false\n        this.roomId = ''\n    }\n\n    doLogin = () => {}\n\n    doSignOut = () => {}\n}\n\nexport const AuthContext = React.createContext<AuthType>(new Auth())\n\nexport const useAuth = () => useContext(AuthContext)\n\nexport default AuthContext\n","import React, { useContext } from 'react'\nimport {\n    SOCKET_URL,\n    AUTHORIZE_URL,\n    REQUEST_TOKEN_URL,\n    SPOTIFY_USER_TOKEN,\n    REFRESH_TOKEN_URL,\n    GET_QUEUE_URL,\n    ADD_TRACK_TO_QUEUE_URL,\n    REMOVE_TRACK_FROM_QUEUE_URL,\n    HOST_URL,\n    VALIDATE_ROOM_URL,\n    SEARCH_URL,\n    validateRoomID,\n    Fetch,\n    TrackType,\n    tokenHasExpired,\n    SpotifyToken,\n    APIType,\n} from './'\n\nconst Message = (type: string, payload: string | object): string => {\n    return JSON.stringify({\n        type,\n        payload,\n    })\n}\n\nexport class API implements APIType {\n    ws: WebSocket\n    host: boolean\n    window: Window | null\n    roomID: string\n    inSession: boolean\n\n    constructor() {\n        this.window = null\n        this.roomID = ''\n        this.inSession = false\n        this.ws = null\n        this.host = false\n    }\n\n    connect = () => {\n        this.ws = new WebSocket(SOCKET_URL)\n\n        this.ws.onopen = () => {\n            console.log('Open socket')\n        }\n\n        this.ws.onclose = (par: any) => {\n            console.log('Close socket', par)\n            this.ws = null\n            setTimeout(this.check, 1000)\n        }\n\n        this.ws.onerror = (err: any) => {\n            console.error('Socket error', err)\n            this.ws.close()\n        }\n    }\n\n    check = () => {\n        /* check if websocket instance is closed, if so call `connect` function. */\n        if (this.inSession && (!this.ws || this.ws.readyState === WebSocket.CLOSED)) this.connect()\n    }\n\n    doSendMessage = (type: string, payload: string | object) => {\n        const message = Message(type, payload)\n        const interval = setInterval(() => {\n            if (this.ws && this.ws.readyState === WebSocket.OPEN) {\n                this.ws.send(message)\n                clearInterval(interval)\n            }\n        }, 1000)\n    }\n\n    doJoinRoom = (id: string, cb: any) => {\n        if (!this.ws) this.connect()\n\n        this.ws.onmessage = (e: any) => {\n            const message = JSON.parse(e.data)\n            switch (message.type) {\n                case 'spectator':\n                    break\n                case 'numSubscribers':\n                    cb.setSubscribers(message.payload as number)\n                    break\n                case 'leave':\n                    cb.setSubscribers(message.payload as number)\n                    break\n                case 'trackAdded':\n                    cb.addTrackToQueue(message.payload as TrackType)\n                    break\n                case 'trackRemoved':\n                    cb.removeTrackFromQueue(message.payload as string)\n                    break\n                case 'vote':\n                    cb.vote(message.payload as { votes: number; id: string })\n                    break\n                default:\n                    break\n            }\n        }\n\n        this.roomID = id\n\n        if (!this.inSession) {\n            this.doSendMessage('join', id)\n            this.inSession = true\n        }\n    }\n\n    doLeaveRoom = () => {\n        this.inSession = false\n        this.roomID = ''\n        this.ws.close()\n    }\n\n    doAuthorizeUser = () => {\n        return new Promise((resolve, reject) => {\n            const token: SpotifyToken = JSON.parse(localStorage.getItem(SPOTIFY_USER_TOKEN))\n\n            if (token && !tokenHasExpired(token)) {\n                return resolve()\n            } else if (token && tokenHasExpired(token)) {\n                return this.doRefreshUserToken(token).then(resolve)\n            }\n\n            const width = 450,\n                height = 730,\n                left = window.screen.width / 2 - width / 2,\n                top = window.screen.height / 2 - height / 2\n\n            const popup = window.open(\n                window.location.href,\n                'Spotify',\n                'menubar=no,location=no,resizable=no,scrollbars=no,status=no,width=' +\n                    `${width},height=${height},top=${top},left=${left}`,\n            )\n\n            return Fetch(AUTHORIZE_URL, 'GET').then((res: { data: string }) => {\n                if (popup) {\n                    popup.location.replace(res.data)\n                    window['tokenCallback'] = () => {\n                        popup.close()\n                        return resolve()\n                    }\n                } else {\n                    alert('Hey, you! This app needs popups, sorry. Just allow them. Once.')\n                }\n            })\n        })\n    }\n\n    doFetchUserToken = (code: string) => {\n        return Fetch(`${REQUEST_TOKEN_URL}?code=${code}`)\n            .then(res => res.data)\n            .then(token => {\n                token.expires_on = Date.now() + token.expires_in * 1000\n                localStorage.setItem(SPOTIFY_USER_TOKEN, JSON.stringify(token))\n            })\n    }\n\n    doRefreshUserToken = (token: SpotifyToken) => {\n        return Fetch(`${REFRESH_TOKEN_URL}?refresh_token=${token.refresh_token}`).then(\n            (res: { data: SpotifyToken }) => {\n                const newToken = res.data\n                newToken.refresh_token = token.refresh_token\n                newToken.expires_on = Date.now() + newToken.expires_in * 1000\n                localStorage.setItem(SPOTIFY_USER_TOKEN, JSON.stringify(newToken))\n                return newToken\n            },\n        )\n    }\n\n    doSetupRoom = async (): Promise<string> => {\n        const response: { data: string } = await Fetch(HOST_URL)\n        this.host = true\n        this.connect()\n        return response.data\n    }\n\n    doValidateRoomID = async (id: string): Promise<boolean> => {\n        return validateRoomID(id) && ((await Fetch(`${VALIDATE_ROOM_URL}?id=${id}`)) as { data: boolean }).data\n    }\n\n    doSearchTrack = async (search: string, signal: AbortSignal): Promise<TrackType[]> => {\n        const query = search.replace(' ', '+')\n        const response: { data: TrackType[] } = await Fetch(`${SEARCH_URL}?query=${query}`, 'GET', null, signal)\n        return response.data\n    }\n\n    doGetQueue = async (): Promise<TrackType[]> => {\n        const response: { data: { tracks: TrackType[] } } = await Fetch(`${GET_QUEUE_URL}?id=${this.roomID}`)\n        return response.data.tracks\n    }\n\n    doAddTrackToQueue = async (id: string): Promise<string> => {\n        const response: { data: string } = await Fetch(\n            `${ADD_TRACK_TO_QUEUE_URL}?trackID=${id}&sessionID=${this.roomID}`,\n            'PUT',\n        )\n        return response.data\n    }\n\n    doRemoveTrackFromQueue = async (id: string) => {\n        Fetch(`${REMOVE_TRACK_FROM_QUEUE_URL}?trackID=${id}&sessionID=${this.roomID}`, 'DELETE')\n    }\n\n    doVoteForTrack = async (id: string, vote: boolean) => {\n        this.doSendMessage('vote', { id, vote, room: this.roomID })\n    }\n}\n\nexport const APIContext = React.createContext<APIType>({} as APIType)\n\nexport const useAPI = (): APIType => useContext(APIContext)\n","module.exports = __webpack_public_path__ + \"static/media/placeholder.a1286edb.png\";","import React from 'react'\nimport { PersonIcon } from './'\nimport { useHistory } from 'react-router-dom'\nimport './styles/Header.scss'\n\ninterface Props {\n    size: 'xs' | 's' | 'm' | 'l' | 'xl'\n    color: 'white' | 'green'\n    numSubscribers?: number\n    id?: string\n}\n\nexport const Header: React.FC<Props> = ({ size, color, numSubscribers, id }: Props) => {\n    const history = useHistory()\n    return (\n        <div className={'header ' + color + ' ' + size}>\n            <h3 className=\"header-name\" onClick={history.goBack}>\n                Queue\n            </h3>\n            {id && (\n                <h3 className=\"header-code\">\n                    Go to <b>queue.rocks</b> and use the code <b>{id}</b>{' '}\n                </h3>\n            )}\n            {numSubscribers && (\n                <div className=\"header-person-icon\">\n                    {numSubscribers} <PersonIcon />\n                </div>\n            )}\n        </div>\n    )\n}\n","import React from 'react'\nimport { Dots } from './'\nimport './styles/Button.scss'\n\ninterface Props {\n    onClick: () => void\n    type?: 'green' | 'white' | 'transparent'\n    value?: string\n    loading?: boolean\n    className?: string\n}\n\nexport const Button: React.FC<Props> = ({\n    onClick,\n    type = 'green',\n    value = '',\n    loading = false,\n    className = '',\n}: Props) => {\n    return (\n        <button onClick={onClick} className={'button button-' + type + ' ' + className}>\n            <div>{loading ? <Dots /> : value}</div>\n        </button>\n    )\n}\n","import React from 'react'\nimport { Header } from '../Common/'\nimport './styles/URLNotFound.scss'\n\ninterface Props {}\n\nexport const URLNotFound: React.FC<Props> = () => {\n    return (\n        <div className=\"404\">\n            <Header color=\"green\" size=\"s\" />\n            <h3>404</h3>\n        </div>\n    )\n}\n","import React from 'react'\nimport './styles/Spinner.scss'\n\nexport const Dots = () => (\n    <div className=\"lds-ellipsis\">\n        <div></div>\n        <div></div>\n        <div></div>\n        <div></div>\n    </div>\n)\n","import React from 'react'\n\nexport const Close = () => (\n    <svg viewBox=\"0 0 512 512\" className=\"icon-fill\">\n        <path d=\"M405 136.798L375.202 107 256 226.202 136.798 107 107 136.798 226.202 256 107 375.202 136.798 405 256 285.798 375.202 405 405 375.202 285.798 256z\" />\n    </svg>\n)\n\nexport const Next = () => (\n    <svg viewBox=\"0 0 170 174\" className=\"icon-fill\">\n        <path d=\"M132.916 87L20 153.684L20 20.316L132.916 87Z\" />\n        <rect x=\"132.916\" y=\"20\" width=\"16.6257\" height=\"134\" />\n    </svg>\n)\n\nexport const Previous = () => (\n    <svg viewBox=\"0 0 170 174\" className=\"icon-fill\">\n        <path d=\"M36.6257 87L149.542 20.316L149.542 153.684L36.6257 87Z\" />\n        <rect x=\"36.6257\" y=\"154\" width=\"16.6257\" height=\"134\" transform=\"rotate(-180 36.6257 154)\" />\n    </svg>\n)\n\nexport const Shuffle = () => (\n    <svg x=\"0px\" y=\"0px\" viewBox=\"0 0 512 512\" className=\"icon-fill\">\n        <g>\n            <g>\n                <g>\n                    <path\n                        d=\"M21.333,149.327H64c18.773,0,37.227,4.928,53.333,14.272c3.371,1.963,7.061,2.88,10.688,2.88\n\t\t\t\tc7.36,0,14.528-3.819,18.475-10.624c5.931-10.197,2.432-23.253-7.744-29.163C116.117,113.594,90.283,106.66,64,106.66H21.333\n\t\t\t\tC9.536,106.66,0,116.218,0,127.994S9.536,149.327,21.333,149.327z\"\n                    />\n                    <path\n                        d=\"M320,149.327h42.667v64c0,8.192,4.715,15.68,12.075,19.221c2.965,1.408,6.123,2.112,9.259,2.112\n\t\t\t\tc4.757,0,9.472-1.6,13.333-4.672L504,144.655c5.056-4.053,8-10.176,8-16.661c0-6.485-2.944-12.608-8-16.661L397.333,25.999\n\t\t\t\tc-6.421-5.12-15.232-6.101-22.592-2.56s-12.075,11.029-12.075,19.221v64H320c-82.325,0-149.333,66.987-149.333,149.333\n\t\t\t\tc0,58.816-47.851,106.667-106.667,106.667H21.333C9.536,362.66,0,372.218,0,383.994s9.536,21.333,21.333,21.333H64\n\t\t\t\tc82.325,0,149.333-66.987,149.333-149.333C213.333,197.178,261.184,149.327,320,149.327z\"\n                    />\n                    <path\n                        d=\"M504,367.336l-106.667-85.333c-6.421-5.141-15.232-6.123-22.592-2.581c-7.36,3.563-12.075,11.029-12.075,19.243v64H320\n\t\t\t\tc-21.077,0-41.472-6.144-58.965-17.771c-9.856-6.485-23.061-3.861-29.568,5.973c-6.528,9.813-3.861,23.061,5.952,29.568\n\t\t\t\tc24.512,16.277,53.056,24.896,82.581,24.896h42.667v64c0,8.192,4.715,15.68,12.075,19.221c2.965,1.408,6.123,2.112,9.259,2.112\n\t\t\t\tc4.757,0,9.472-1.6,13.333-4.672L504,400.659c5.056-4.053,8-10.197,8-16.661C512,377.512,509.056,371.368,504,367.336z\"\n                    />\n                </g>\n            </g>\n        </g>\n        <g></g>\n        <g></g>\n        <g></g>\n        <g></g>\n        <g></g>\n        <g></g>\n        <g></g>\n        <g></g>\n        <g></g>\n        <g></g>\n        <g></g>\n        <g></g>\n        <g></g>\n        <g></g>\n        <g></g>\n    </svg>\n)\n\nexport const Connect = () => (\n    <svg viewBox=\"0 0 123 118\" className=\"icon-connect\">\n        <path\n            d=\"M50 10H14C11.7909 10 10 11.7909 10 14V80C10 82.2091 11.7909 84 14 84H50\"\n            strokeWidth=\"8\"\n            strokeLinejoin=\"round\"\n        />\n        <rect x=\"61\" y=\"10\" width=\"52\" height=\"98\" rx=\"6\" strokeWidth=\"8\" />\n        <path d=\"M35 108H50\" strokeWidth=\"8\" />\n        <circle cx=\"87\" cy=\"77\" r=\"14\" strokeWidth=\"8\" />\n        <circle cx=\"87\" cy=\"35\" r=\"5\" className=\"icon-fill\" />\n    </svg>\n)\n\nexport const Repeat = () => (\n    <svg x=\"0px\" y=\"0px\" viewBox=\"0 0 511.991 511.991\" className=\"icon-fill\">\n        <g>\n            <g>\n                <g>\n                    <path\n                        d=\"M465.45,279.263c-12.87,0-23.273,10.426-23.273,23.273c0,38.493-31.325,69.818-69.818,69.818H186.177v-69.818\n\t\t\t\tc0-8.937-5.143-17.105-13.172-20.969c-8.122-3.863-17.641-2.793-24.646,2.793L31.995,377.451\n\t\t\t\tc-5.516,4.422-8.727,11.101-8.727,18.176c0,7.075,3.212,13.754,8.727,18.176l116.364,93.091\n\t\t\t\tc4.212,3.351,9.356,5.097,14.545,5.097c3.421,0,6.889-0.768,10.1-2.304c8.029-3.863,13.172-12.032,13.172-20.969V418.9h186.182\n\t\t\t\tc64.163,0,116.364-52.201,116.364-116.364C488.723,289.689,478.32,279.263,465.45,279.263z\"\n                    />\n                    <path\n                        d=\"M46.541,232.718c12.87,0,23.273-10.426,23.273-23.273c0-38.493,31.325-69.818,69.818-69.818h186.182v69.818\n\t\t\t\tc0,8.937,5.143,17.105,13.172,20.969c3.235,1.536,6.679,2.304,10.1,2.304c5.19,0,10.333-1.745,14.545-5.097l116.364-93.091\n\t\t\t\tc5.516-4.422,8.727-11.101,8.727-18.176s-3.212-13.754-8.727-18.176L363.632,5.087c-6.982-5.585-16.617-6.656-24.646-2.793\n\t\t\t\ts-13.172,12.032-13.172,20.969v69.818H139.632c-64.163,0-116.364,52.201-116.364,116.364\n\t\t\t\tC23.268,222.292,33.671,232.718,46.541,232.718z\"\n                    />\n                </g>\n            </g>\n        </g>\n        <g></g>\n        <g></g>\n        <g></g>\n        <g></g>\n        <g></g>\n        <g></g>\n        <g></g>\n        <g></g>\n        <g></g>\n        <g></g>\n        <g></g>\n        <g></g>\n        <g></g>\n        <g></g>\n        <g></g>\n    </svg>\n)\n\nexport const Speaker = () => (\n    <svg viewBox=\"0 0 76 120\">\n        <rect x=\"12\" y=\"11\" width=\"52\" height=\"98\" rx=\"4\" strokeWidth=\"6\" />\n        <circle cx=\"38\" cy=\"78\" r=\"14\" strokeWidth=\"6\" />\n        <circle cx=\"38\" cy=\"36\" r=\"5\" className=\"icon-fill\" />\n    </svg>\n)\n\nexport const Phone = () => (\n    <svg viewBox=\"0 0 76 120\">\n        <rect x=\"12\" y=\"11\" width=\"52\" height=\"98\" rx=\"4\" strokeWidth=\"6\" />\n        <circle cx=\"38\" cy=\"96\" r=\"5\" className=\"icon-fill\" />\n    </svg>\n)\n\nexport const Computer = () => (\n    <svg viewBox=\"0 0 228 180\">\n        <rect x=\"35\" y=\"21\" width=\"157\" height=\"113\" rx=\"4\" strokeWidth=\"6\" />\n        <path d=\"M15 158H213\" strokeWidth=\"6\" />\n    </svg>\n)\n\nexport const Play = () => (\n    <svg x=\"0px\" y=\"0px\" viewBox=\"0 0 320.001 320.001\" className=\"icon-fill\">\n        <path\n            d=\"M295.84,146.049l-256-144c-4.96-2.784-11.008-2.72-15.904,0.128C19.008,5.057,16,10.305,16,16.001v288\n\tc0,5.696,3.008,10.944,7.936,13.824c2.496,1.44,5.28,2.176,8.064,2.176c2.688,0,5.408-0.672,7.84-2.048l256-144\n\tc5.024-2.848,8.16-8.16,8.16-13.952S300.864,148.897,295.84,146.049z\"\n        />\n        <g></g>\n        <g></g>\n        <g></g>\n        <g></g>\n        <g></g>\n        <g></g>\n        <g></g>\n        <g></g>\n        <g></g>\n        <g></g>\n        <g></g>\n        <g></g>\n        <g></g>\n        <g></g>\n        <g></g>\n    </svg>\n)\n\nexport const Pause = () => (\n    <svg x=\"0px\" y=\"0px\" viewBox=\"0 0 47.607 47.607\" className=\"icon-fill\">\n        <g>\n            <path\n                d=\"M17.991,40.976c0,3.662-2.969,6.631-6.631,6.631l0,0c-3.662,0-6.631-2.969-6.631-6.631V6.631C4.729,2.969,7.698,0,11.36,0\n\t\tl0,0c3.662,0,6.631,2.969,6.631,6.631V40.976z\"\n            />\n            <path\n                d=\"M42.877,40.976c0,3.662-2.969,6.631-6.631,6.631l0,0c-3.662,0-6.631-2.969-6.631-6.631V6.631\n\t\tC29.616,2.969,32.585,0,36.246,0l0,0c3.662,0,6.631,2.969,6.631,6.631V40.976z\"\n            />\n        </g>\n        <g></g>\n        <g></g>\n        <g></g>\n        <g></g>\n        <g></g>\n        <g></g>\n        <g></g>\n        <g></g>\n        <g></g>\n        <g></g>\n        <g></g>\n        <g></g>\n        <g></g>\n        <g></g>\n        <g></g>\n    </svg>\n)\n\nexport const PersonIcon = () => {\n    return (\n        <svg enableBackground=\"new 0 0 512 512\" viewBox=\"0 0 512 512\">\n            <g>\n                <path\n                    d=\"M348.574,145.901c0,53.522-43.377,96.914-96.901,96.914c-53.523,0-96.914-43.392-96.914-96.914    c0-53.51,43.391-96.901,96.914-96.901C305.197,49,348.574,92.391,348.574,145.901z\"\n                    fill=\"none\"\n                    stroke=\"#fff\"\n                    strokeLinecap=\"round\"\n                    strokeLinejoin=\"round\"\n                    strokeMiterlimit=\"10\"\n                    strokeWidth=\"20\"\n                />\n                <path\n                    d=\"M275.38,274.46c95.561,9.706,170.154,90.401,170.154,188.54\"\n                    fill=\"none\"\n                    stroke=\"#fff\"\n                    strokeLinecap=\"round\"\n                    strokeLinejoin=\"round\"\n                    strokeMiterlimit=\"10\"\n                    strokeWidth=\"20\"\n                />\n                <path\n                    d=\"M66.466,463c0-96.358,71.925-175.934,165.027-187.961\"\n                    fill=\"none\"\n                    stroke=\"#fff\"\n                    strokeLinecap=\"round\"\n                    strokeLinejoin=\"round\"\n                    strokeMiterlimit=\"10\"\n                    strokeWidth=\"20\"\n                />\n            </g>\n        </svg>\n    )\n}\n\nexport const Heart = () => (\n    <svg viewBox=\"0 0 512 512\">\n        <path d=\"M340.8,83C307,83,276,98.8,256,124.8c-20-26-51-41.8-84.8-41.8C112.1,83,64,131.3,64,190.7c0,27.9,10.6,54.4,29.9,74.6  L245.1,418l10.9,11l10.9-11l148.3-149.8c21-20.3,32.8-47.9,32.8-77.5C448,131.3,399.9,83,340.8,83L340.8,83z\" />\n    </svg>\n)\n\nexport const HeartOutline = () => (\n    <svg viewBox=\"0 0 512 512\">\n        <path d=\"M340.8,98.4c50.7,0,91.9,41.3,91.9,92.3c0,26.2-10.9,49.8-28.3,66.6L256,407.1L105,254.6c-15.8-16.6-25.6-39.1-25.6-63.9  c0-51,41.1-92.3,91.9-92.3c38.2,0,70.9,23.4,84.8,56.8C269.8,121.9,302.6,98.4,340.8,98.4 M340.8,83C307,83,276,98.8,256,124.8  c-20-26-51-41.8-84.8-41.8C112.1,83,64,131.3,64,190.7c0,27.9,10.6,54.4,29.9,74.6L245.1,418l10.9,11l10.9-11l148.3-149.8  c21-20.3,32.8-47.9,32.8-77.5C448,131.3,399.9,83,340.8,83L340.8,83z\" />\n    </svg>\n)\n","import React, { useState } from 'react'\nimport { Join, Host } from './'\nimport { ROUTES, useAPI } from '../../utils'\nimport { RouteComponentProps } from 'react-router'\nimport './styles/Start.scss'\n\nconst ERROR_SESSION = 'The session could not be found'\nconst ERROR_AUTH = 'User could not be authenticated'\n\ninterface MatchParams {\n    id: string\n}\n\ninterface Props extends RouteComponentProps<MatchParams> {\n    onSelect?: (s: string) => void\n}\n\nexport const Start: React.FC<Props> = ({ onSelect, history }: Props) => {\n    const api = useAPI()\n\n    const [error, setError] = useState('')\n    const [loading, setLoading] = useState(false)\n\n    const handleHostRoom = async (): Promise<any> => {\n        console.log('Authorizing...')\n        api.doAuthorizeUser()\n            .then(async () => {\n                console.log('Authorized!')\n                const id = await api.doSetupRoom()\n                history.push(ROUTES.HOST.replace(':id', id))\n            })\n            .catch(err => {\n                setError(ERROR_AUTH)\n            })\n    }\n\n    const handleJoinRoom = async (id: string): Promise<any> => {\n        setLoading(true)\n        if (await api.doValidateRoomID(id)) {\n            history.push(ROUTES.ROOM.replace(':id', id))\n        } else {\n            setLoading(false)\n            setError(ERROR_SESSION)\n        }\n    }\n\n    return (\n        <div className=\"start\">\n            <h3 className=\"xl green\">Queue</h3>\n            <div className=\"start-buttons\">\n                <Host onSelect={handleHostRoom} />\n                <Join onSelect={handleJoinRoom} loading={loading} />\n            </div>\n            {error && <div className=\"start-error\">{error}</div>}\n        </div>\n    )\n}\n","import React, { useState } from 'react'\nimport { Button } from '../Common/'\n\ntype Props = {\n    onSelect: () => void\n}\n\nexport const Host: React.FC<Props> = ({ onSelect }: Props) => {\n    const [isLoading, setLoading] = useState(false)\n\n    const handleClick = () => {\n        setLoading(true)\n        onSelect()\n    }\n\n    return <Button onClick={handleClick} value=\"Host\" type=\"transparent\" loading={isLoading} />\n}\n","import React, { useState, useRef, useEffect, useCallback } from 'react'\nimport { Button } from '../Common/'\nimport { TextInput } from './'\n\ntype Props = {\n    onSelect: (s: string) => void\n    loading: boolean\n}\n\nexport const Join: React.FC<Props> = ({ onSelect, loading }: Props) => {\n    const [input, setInput] = useState<string>('')\n    const [inputVisible, setInputVisible] = useState<boolean>(false)\n    const joinRef = useRef<HTMLDivElement>(document.createElement('div'))\n\n    const handleSubmit = useCallback((): void => {\n        if (inputVisible && input.length > 0) {\n            onSelect(input)\n        } else {\n            setInputVisible(true)\n        }\n    }, [inputVisible, input, onSelect])\n\n    const handleClickOutside = useCallback(\n        (e: MouseEvent): void => {\n            if (!joinRef.current.contains(e.target as Node) && inputVisible) {\n                setInputVisible(false)\n            }\n        },\n        [inputVisible],\n    )\n\n    const handleEnterPressed = useCallback(\n        (e: KeyboardEvent): void => {\n            if (e.key === 'Enter') {\n                handleSubmit()\n            }\n        },\n        [handleSubmit],\n    )\n\n    useEffect(() => {\n        document.addEventListener('click', handleClickOutside)\n        document.addEventListener('keydown', handleEnterPressed)\n        return () => {\n            document.removeEventListener('click', handleClickOutside)\n            document.removeEventListener('keydown', handleEnterPressed)\n        }\n    }, [handleEnterPressed, handleClickOutside])\n\n    return (\n        <div ref={joinRef} className={'join-button' + (inputVisible ? ' show' : '')}>\n            <Button\n                className={loading ? 'loading' : ''}\n                onClick={handleSubmit}\n                value={inputVisible ? '\\uFF0B' : 'Join'}\n                type=\"green\"\n            />\n            <TextInput onChange={setInput} placeholder=\"Room code\" value={input} visible={inputVisible} />\n        </div>\n    )\n}\n","import React from 'react'\nimport './styles/TextInput.scss'\n\ninterface Props {\n    onChange: (s: string) => void\n    value: string | undefined,\n    placeholder?: string\n    visible?: boolean\n}\n\nexport const TextInput: React.FC<Props> = ({ onChange, value, visible=true, placeholder='' }: Props) => {\n    return (\n        <input\n            className={visible ? 'text-input visible' : 'text-input'}\n            type=\"text\"\n            value={value}\n            onChange={(e: React.ChangeEvent<HTMLInputElement>): void => {\n                onChange(e.target.value)\n            }}\n            placeholder={placeholder}\n        />\n    )\n}\n","import React, { useEffect } from 'react'\nimport { RouteComponentProps } from 'react-router-dom'\nimport { useAPI } from '../../utils'\n\nexport interface RedirectProps extends RouteComponentProps {}\n\nexport const Redirect: React.FC<RedirectProps> = props => {\n    const api = useAPI()\n\n    useEffect(() => {\n        const query = new URLSearchParams(props.location.search)\n        const code = query.get('code')\n        api.doFetchUserToken(code).then(() => {\n            window.opener.tokenCallback()\n            window.close()\n        })\n    }, [api, props.location])\n    return <div></div>\n}\n","import React, { useEffect, useCallback, useRef, useState } from 'react'\nimport { useDebouncedInput } from '../../utils'\nimport './styles/SearchInput.scss'\n\ninterface SearchProps {\n    onCancel: () => void\n    onSearchUpdate: (s: string) => void\n    searching: boolean\n}\n\nexport const SearchInput: React.FC<SearchProps> = ({ onCancel, onSearchUpdate, searching }) => {\n    const inputRef = useRef<HTMLInputElement>(document.createElement('input'))\n    const { input, setInput, handleInputChange } = useDebouncedInput(onSearchUpdate, onCancel)\n    const [hasFocus, setFocus] = useState(false)\n\n    const handleCancel = useCallback(() => {\n        inputRef.current.blur()\n        setInput('')\n        onCancel()\n    }, [onCancel, setInput])\n\n    const handleClickOutside = useCallback(\n        (e: MouseEvent) => {\n            if (!inputRef.current.contains(e.target as Node)) {\n                handleCancel()\n            }\n        },\n        [handleCancel],\n    )\n\n    const handleKeyPressed = useCallback(\n        (e: KeyboardEvent) => {\n            if (e.key === 'Escape') {\n                handleCancel()\n            }\n        },\n        [handleCancel],\n    )\n\n    useEffect(() => {\n        if (!searching && input.length > 0) {\n            setInput('')\n        }\n    })\n\n    useEffect(() => {\n        const current = inputRef.current\n        current.addEventListener('click', handleClickOutside)\n        current.addEventListener('keydown', handleKeyPressed)\n\n        return () => {\n            current.removeEventListener('click', handleClickOutside)\n            current.removeEventListener('keydown', handleKeyPressed)\n        }\n    }, [handleClickOutside, handleKeyPressed])\n\n    return (\n        <div className=\"search-input\">\n            <input\n                ref={inputRef}\n                tabIndex={1}\n                onFocus={() => setFocus(true)}\n                onBlur={() => setFocus(false)}\n                onChange={handleInputChange}\n                value={input}\n                type=\"text\"\n                placeholder=\"Sök\"\n            />\n            {(searching || hasFocus) && <button onClick={handleCancel}>&#x2573;</button>}\n        </div>\n    )\n}\n","import React, { useState, useEffect } from 'react'\nimport { TrackType } from '../../utils'\nimport { Heart, HeartOutline } from '../Common'\nimport './styles/SearchResults.scss'\n\ninterface SearchResultProps {\n    tracks: TrackType[]\n    onAddTrack: (track: TrackType) => void\n    onRemoveTrack: (id: string) => void\n}\n\nexport const SearchResults: React.FC<SearchResultProps> = ({\n    tracks,\n    onAddTrack,\n    onRemoveTrack,\n}: SearchResultProps) => {\n    const [queuedTracks, setQueuedTracks] = useState(tracks.map(t => t.id))\n\n    useEffect(() => {\n        setQueuedTracks(Array(tracks.length).fill(false))\n    }, [tracks])\n\n    const handleAddTrack = (index: number) => {\n        if (queuedTracks[index]) {\n            onRemoveTrack(tracks[index].queue_id)\n        } else {\n            onAddTrack(tracks[index])\n        }\n        const copy = [...queuedTracks]\n        copy[index] = !copy[index]\n        setQueuedTracks(copy)\n    }\n\n    return (\n        <div className=\"list-container\">\n            <ul className=\"track-list search-results\">\n                {tracks.map((track, index) => (\n                    <li key={track.queue_id}>\n                        <img src={getArtwork(track.album_s)} alt=\"\" />\n                        <div className=\"track-names\">\n                            <div>\n                                <h3>{track.title}</h3>\n                            </div>\n                            <div>{track.artist}</div>\n                        </div>\n                        <button onClick={() => handleAddTrack(index)}>\n                            <div>{queuedTracks[index] ? <Heart /> : <HeartOutline />}</div>\n                        </button>\n                    </li>\n                ))}\n            </ul>\n        </div>\n    )\n}\n\nfunction getArtwork(album: string) {\n    if (album.length > 0) {\n        return album\n    } else {\n        return require('../../assets/img/placeholder.png')\n    }\n}\n","import React from 'react'\nimport { PulseLoader as Spinner } from 'react-spinners'\nimport { SearchInput, SearchResults } from './'\nimport { useSearch } from '../../utils'\nimport './styles/Search.scss'\n\ninterface Props {\n    queue: any\n}\n\nexport const Search: React.FC<Props> = ({ children, queue }) => {\n    const { searching, searchUpdate, cancelSearch, search } = useSearch()\n    return (\n        <div className=\"search\">\n            <SearchInput onSearchUpdate={searchUpdate} onCancel={cancelSearch} searching={searching} />\n            {searching ? (\n                search.loading ? (\n                    <Spinner css={'margin-top: 10vh;'} size={10} color={'white'} />\n                ) : search.result && search.result.length > 0 ? (\n                    <SearchResults\n                        onAddTrack={queue.addToQueue}\n                        onRemoveTrack={queue.removeFromQueue}\n                        tracks={search.result}\n                    />\n                ) : (\n                    <p>No results</p>\n                )\n            ) : (\n                children\n            )}\n        </div>\n    )\n}\n","import React from 'react'\nimport { Header } from '../Common/'\nimport { RouteComponentProps } from 'react-router'\nimport { useWebSocket } from '../../utils'\nimport { Search } from '../Search'\nimport './styles/Host.scss'\nimport { Player, TrackList, useSpotify } from './'\n\ninterface MatchParams {\n    id: string\n}\n\ninterface Props extends RouteComponentProps<MatchParams> {}\n\nexport const Host: React.FC<Props> = (props: Props) => {\n    const { subscribers, queue } = useWebSocket(props.match.params.id)\n    const { playerState, controller, fetching } = useSpotify()\n\n    return (\n        <div className=\"host\">\n            <Header color=\"green\" size=\"s\" numSubscribers={subscribers} id={props.match.params.id} />\n            <div className=\"host-content\">\n                <Player tracks={queue.tracks} playerState={playerState} controller={controller} fetching={fetching} />\n                <Search queue={queue}>\n                    <TrackList tracks={queue.tracks} onDelete={queue.removeFromQueue} onPlay={controller.playTrack} />\n                </Search>\n            </div>\n        </div>\n    )\n}\n","import React from 'react'\nimport { TrackType } from '../../utils'\nimport { Play, Close } from '../Common'\nimport './styles/TrackList.scss'\n\ninterface TrackListProps {\n    tracks: TrackType[]\n    onDelete: (id: string) => void\n    onPlay: (id: string, queue_id: string) => void\n}\n\nexport const TrackList: React.FC<TrackListProps> = ({ tracks, onDelete, onPlay }: TrackListProps) => {\n    return (\n        <ul className=\"host-track-list\">\n            <li>\n                <div>TITLE</div>\n                <div>ARTIST</div>\n                <div>VOTES</div>\n            </li>\n            {tracks.length > 0 ? (\n                tracks.map((track, index) => (\n                    <li key={track.id}>\n                        <div>{track.title}</div>\n                        <div>{track.artist}</div>\n                        <div>{track.votes}</div>\n                        <button onClick={() => onPlay(track.id, track.queue_id)}>\n                            <Play />\n                        </button>\n                        <button onClick={() => onDelete(track.queue_id)}>\n                            <Close />\n                        </button>\n                    </li>\n                ))\n            ) : (\n                <li>\n                    <h3>The Queue is empty</h3>\n                </li>\n            )}\n        </ul>\n    )\n}\n","import React, { useState, useEffect, useCallback } from 'react'\nimport { TrackType, millisToMinutesAndSeconds } from '../../utils'\nimport { Play, Pause, Connect, Shuffle, Next, Previous, Computer, Speaker, Phone } from '../Common'\nimport { PulseLoader as Spinner } from 'react-spinners'\nimport { Image } from './'\nimport './styles/Player.scss'\nimport { SpotifyPlayer } from '../../utils/Spotify'\n\nconst PLACEHOLDER_TRACK = {\n    src: require('../../assets/img/placeholder.png'),\n    artist: 'Artist',\n    track: 'Track',\n}\n\ninterface PlayerProps {\n    tracks: TrackType[]\n    playerState: SpotifyApi.CurrentPlaybackResponse\n    controller: SpotifyPlayer\n    fetching: boolean\n}\n\nexport const Player: React.FC<PlayerProps> = ({ tracks, playerState, controller, fetching }) => {\n    const renderPlayer = () => {\n        if (playerState && 'is_playing' in playerState) {\n            const track = playerState.item\n            return (\n                <div className=\"player\">\n                    <Image src={track.album.images[0].url} />\n                    <h3>{track.artists[0].name}</h3>\n                    <p>{track.name}</p>\n                    <Controller tracks={tracks} state={playerState} controller={controller} />\n                </div>\n            )\n        } else {\n            return (\n                <div className=\"player\">\n                    <Image src={PLACEHOLDER_TRACK.src} />\n                    <h3>{PLACEHOLDER_TRACK.artist}</h3>\n                    <p>{PLACEHOLDER_TRACK.track}</p>\n                    <DisabledController controller={controller} />\n                </div>\n            )\n        }\n    }\n\n    return (\n        <>\n            <Overlay fetching={fetching} />\n            {renderPlayer()}\n        </>\n    )\n}\n\ninterface OverlayProps {\n    fetching: boolean\n}\n\nconst Overlay: React.FC<OverlayProps> = ({ fetching }) => {\n    const [showOverlay, setShowOverlay] = useState(fetching)\n\n    useEffect(() => {\n        setTimeout(() => setShowOverlay(false), 1000)\n    }, [fetching])\n\n    return showOverlay ? <div className={'player-loading-overlay' + (fetching ? '' : ' disabled')}></div> : null\n}\n\ninterface DisabledControllerProps {\n    controller: SpotifyPlayer\n}\n\nconst DisabledController: React.FC<DisabledControllerProps> = ({ controller }) => {\n    return (\n        <div className=\"player-controller\">\n            <div className=\"player-controller-controlls\">\n                <ControllButton onClick={() => {}} type=\"shuffle\" />\n                <ControllButton onClick={() => {}} type=\"prev\" />\n                <ControllButton onClick={() => {}} type={'play'} />\n                <ControllButton onClick={() => {}} type=\"next\" />\n                <ConnectButton controller={controller} />\n            </div>\n            <ProgressBar isPlaying={false} length={0} current={0} onSeek={(ms: number) => {}} onEnd={() => {}} />\n        </div>\n    )\n}\n\ninterface ControllerProps {\n    state: SpotifyApi.CurrentPlaybackResponse\n    controller: SpotifyPlayer\n    tracks: TrackType[]\n}\n\nexport const Controller: React.FC<ControllerProps> = ({ state, controller, tracks }) => {\n    const [isPlaying, setIsPlaying] = useState(state.is_playing)\n\n    useEffect(() => {\n        setIsPlaying(state.is_playing)\n    }, [state.is_playing])\n\n    const handleTogglePlayback = () => {\n        controller.togglePlayback(isPlaying)\n        setIsPlaying(!isPlaying)\n    }\n\n    const handlePlayNextTrack = () => {\n        if (tracks.length > 0) {\n            controller.playTrack(tracks[0].id, tracks[0].queue_id)\n        } else {\n            controller.playSimilarTrack()\n        }\n    }\n\n    return (\n        <div className=\"player-controller\">\n            <div className=\"player-controller-controlls\">\n                <ControllButton onClick={() => console.log(controller)} type=\"shuffle\" />\n                <ControllButton onClick={() => controller.changeTrack(false)} type=\"prev\" />\n                <ControllButton onClick={handleTogglePlayback} type={isPlaying ? 'pause' : 'play'} />\n                <ControllButton onClick={handlePlayNextTrack} type=\"next\" />\n                <ConnectButton controller={controller} />\n            </div>\n            <ProgressBar\n                isPlaying={isPlaying}\n                length={state.item.duration_ms}\n                current={state.progress_ms}\n                onSeek={controller.seekInPlayingTrack}\n                onEnd={handlePlayNextTrack}\n            />\n        </div>\n    )\n}\n\ninterface PopUpProps {\n    devices: SpotifyApi.UserDevice[]\n    onClick: (id: string) => void\n}\n\nconst PopUp: React.FC<PopUpProps> = ({ devices, onClick }) => {\n    const getIcon = (type: string) => {\n        switch (type) {\n            case 'Computer':\n                return <Computer />\n            case 'Speaker':\n                return <Speaker />\n            case 'Smartphone':\n                return <Phone />\n            default:\n                return <Speaker />\n        }\n    }\n\n    return (\n        <div>\n            <ul>\n                {devices.length > 0 ? (\n                    devices.map((device, index) => (\n                        <li key={device.id}>\n                            <button\n                                className={\n                                    device.is_restricted ? 'device-restricted' : device.is_active ? 'device-active' : ''\n                                }\n                                disabled={device.is_restricted}\n                                onClick={() => onClick(device.id)}\n                            >\n                                {getIcon(device.type)}\n                                <p>{device.name}</p>\n                            </button>\n                        </li>\n                    ))\n                ) : (\n                    <li>\n                        <Spinner size={10} color={'white'} />\n                    </li>\n                )}\n            </ul>\n        </div>\n    )\n}\n\ninterface ConnectButtonProps {\n    controller: SpotifyPlayer\n}\n\nconst ConnectButton: React.FC<ConnectButtonProps> = ({ controller }) => {\n    const [isVisible, setIsVisible] = useState(false)\n    const [devices, setDevices] = useState([])\n\n    const handleTogglePopUp = () => {\n        if (!isVisible) controller.getDevices().then(setDevices)\n        setIsVisible(!isVisible)\n    }\n\n    const handleSelectDevice = (id: string) => {\n        controller\n            .setDevice(id)\n            .then(controller.getDevices)\n            .then(setDevices)\n    }\n\n    useEffect(() => {\n        let mounted = true\n        controller.getDevices().then(devices => {\n            if (mounted) setDevices(devices)\n        })\n        return () => (mounted = false)\n    }, [controller.getDevices])\n\n    return (\n        <div className=\"player-controll-connect\">\n            {isVisible && <PopUp devices={devices} onClick={handleSelectDevice} />}\n            <ControllButton onClick={handleTogglePopUp} type=\"connect\" />\n        </div>\n    )\n}\n\ninterface ControllButtonProps {\n    type: 'shuffle' | 'prev' | 'play' | 'pause' | 'next' | 'connect'\n    onClick: () => void\n}\n\nexport const ControllButton: React.FC<ControllButtonProps> = ({ type, onClick }: ControllButtonProps) => {\n    const isCircled = type === 'play' || type === 'pause'\n    const renderIcon = () => {\n        switch (type) {\n            case 'next':\n                return <Next />\n            case 'play':\n                return <Play />\n            case 'prev':\n                return <Previous />\n            case 'pause':\n                return <Pause />\n            case 'shuffle':\n                return <Shuffle />\n            case 'connect':\n                return <Connect />\n        }\n    }\n    return (\n        <button onClick={onClick} className={'player-controll-button ' + type + (isCircled ? ' circle' : '')}>\n            {renderIcon()}\n        </button>\n    )\n}\n\ninterface ProgressBarProps {\n    current: number\n    length: number\n    isPlaying: boolean\n    onSeek: (ms: number) => void\n    onEnd: () => void\n}\n\nexport const ProgressBar: React.FC<ProgressBarProps> = ({\n    current,\n    length,\n    isPlaying,\n    onSeek,\n    onEnd,\n}: ProgressBarProps) => {\n    const [progress, setProgress] = useState(current)\n\n    const styles = {\n        // transform: `scaleX(${progress / length})`,\n        width: `${(100 * progress) / length}%`,\n    }\n\n    const tick = useCallback(() => {\n        const next = progress + 1500\n        if (Math.round(next) < length) setProgress(next - 500)\n        else {\n            setProgress(0)\n            onEnd()\n        }\n    }, [length, onEnd, progress])\n\n    useEffect(() => {\n        if (isPlaying) {\n            const interval = setInterval(tick, 1000)\n            return () => clearInterval(interval)\n        }\n    }, [tick, isPlaying])\n\n    useEffect(() => {\n        setProgress(current)\n    }, [current, length])\n\n    useEffect(() => {\n        setProgress(progress)\n    }, [isPlaying, progress])\n\n    const handleSeekTrack = (e: React.MouseEvent<HTMLDivElement, MouseEvent>) => {\n        const progressBar = e.currentTarget\n        const progressBarWidth = progressBar.offsetWidth\n        const progressBarClickPosition = e.clientX - progressBar.getBoundingClientRect().left\n        const progressBarProgressClicked = progressBarClickPosition / progressBarWidth\n        const progressInMs = Math.round(progressBarProgressClicked * length)\n        onSeek(progressInMs)\n        setProgress(progressInMs)\n    }\n\n    return (\n        <div className=\"progress-bar-container\">\n            <div>{millisToMinutesAndSeconds(progress)}</div>\n            <div className=\"progress-bar\" onClick={handleSeekTrack}>\n                <div style={styles}></div>\n            </div>\n            <div>{millisToMinutesAndSeconds(length)}</div>\n        </div>\n    )\n}\n","import React, { useRef, useEffect } from 'react'\nimport VanillaTilt from 'vanilla-tilt'\nimport './styles/Image.scss'\n\nconst OPTIONS = {\n    perspective: 2000,\n    speed: 500,\n    max: 5,\n}\n\nexport interface Props {\n    src: string\n}\n\nexport const Image: React.FC<Props> = ({ src }: Props) => {\n    const tilt = useRef<HTMLDivElement>(document.createElement('div'))\n\n    useEffect(() => {\n        VanillaTilt.init(tilt.current, OPTIONS)\n    })\n\n    return (\n        <div ref={tilt} className=\"album-tilt\">\n            <img src={src} alt=\"Album artwork\" />\n        </div>\n    )\n}\n","import { useState, useEffect } from 'react'\nimport {\n    SPOTIFY_USER_TOKEN,\n    SPOTIFY_PLAYER_BASE_URL,\n    SPOTIFY_PLAYER_PLAY_URL,\n    SPOTIFY_PLAYER_PAUSE_URL,\n    SPOTIFY_PLAYER_NEXT_TRACK_URL,\n    SPOTIFY_PLAYER_PREVIOUS_TRACK_URL,\n    SPOTIFY_PLAYER_SEEK_URL,\n    SpotifyToken,\n    useAPI,\n    tokenHasExpired,\n    APIType,\n    SPOTIFY_PLAYER_RECOMMENDATION_URL,\n    TrackType,\n    LAST_PLAYED_TRACK,\n    SPOTIFY_PLAYER_GET_DEVICES_URL,\n    SPOTIFY_PLAYER_SET_DEVICE_URL,\n} from '.'\n\nconst POLLING_TIMEOUT = 10000\n\nexport class SpotifyPlayer {\n    playerInterval: null | number\n    token: SpotifyToken\n    api: APIType\n    pollingCallback: null | ((state: SpotifyApi.CurrentPlaybackResponse) => void)\n    abortController: AbortController\n\n    constructor(api: APIType) {\n        const token: SpotifyToken = JSON.parse(localStorage.getItem(SPOTIFY_USER_TOKEN))\n        this.token = token\n        this.playerInterval = null\n        this.pollingCallback = null\n        this.api = api\n        this.abortController = new AbortController()\n    }\n\n    pollPlayerState = (next: (state: SpotifyApi.CurrentPlaybackResponse) => void) => {\n        this.pollingCallback = next\n        this.getPlayerState(next)\n        this.playerInterval = window.setInterval(() => this.getPlayerState(next), POLLING_TIMEOUT)\n    }\n\n    clearPolling = () => {\n        if (this.playerInterval) clearInterval(this.playerInterval)\n    }\n\n    getPlayerState = (next: (state: SpotifyApi.CurrentPlaybackResponse) => void) => {\n        this.request(SPOTIFY_PLAYER_BASE_URL, {}).then(next)\n    }\n\n    getDevices = (): Promise<SpotifyApi.UserDevice[]> => {\n        const config = {\n            method: 'GET',\n        }\n        return this.request(SPOTIFY_PLAYER_GET_DEVICES_URL, config).then(\n            (res: SpotifyApi.UserDevicesResponse) => res.devices,\n        )\n    }\n\n    setDevice = (id: string): Promise<any> => {\n        const config = {\n            method: 'PUT',\n            body: JSON.stringify({\n                device_ids: [id],\n            }),\n        }\n        return this.request(SPOTIFY_PLAYER_SET_DEVICE_URL, config)\n    }\n\n    playTrack = (id: string, queue_id?: string) => {\n        const config = {\n            method: 'PUT',\n            body: JSON.stringify({\n                uris: [`spotify:track:${id}`],\n            }),\n        }\n\n        this.abortController.abort()\n        this.abortController = new AbortController()\n\n        this.request(SPOTIFY_PLAYER_PLAY_URL, config).then(() => {\n            this.getPlayerState(this.pollingCallback)\n        })\n        if (queue_id) this.api.doRemoveTrackFromQueue(queue_id)\n    }\n\n    playSimilarTrack = () => {\n        const id = localStorage.getItem(LAST_PLAYED_TRACK)\n        const config = {\n            method: 'GET',\n        }\n        const url = `${SPOTIFY_PLAYER_RECOMMENDATION_URL}?seed_tracks=${id}&limit=1`\n        this.request(url, config).then(({ tracks }: { tracks: TrackType[] }) => {\n            if (tracks && tracks.length > 0) {\n                this.playTrack(tracks[0].id)\n            }\n        })\n    }\n\n    changeTrack = (next: boolean = true) => {\n        const url = next ? SPOTIFY_PLAYER_NEXT_TRACK_URL : SPOTIFY_PLAYER_PREVIOUS_TRACK_URL\n        const config = {\n            method: 'POST',\n        }\n        this.request(url, config)\n    }\n\n    togglePlayback = (isPlaying: boolean) => {\n        const url = isPlaying ? SPOTIFY_PLAYER_PAUSE_URL : SPOTIFY_PLAYER_PLAY_URL\n        const config = {\n            method: 'PUT',\n        }\n        this.request(url, config)\n    }\n\n    seekInPlayingTrack = (ms: number) => {\n        const url = `${SPOTIFY_PLAYER_SEEK_URL}?position_ms=${ms}`\n        const config = { method: 'PUT' }\n        this.request(url, config)\n    }\n\n    refreshToken = (): Promise<void> => {\n        console.log('Token expired:', this.token)\n        return this.api.doRefreshUserToken(this.token).then(token => {\n            this.token = token\n        })\n    }\n\n    request = (url: string, config: object) => {\n        if (this.token && tokenHasExpired(this.token)) {\n            return this.refreshToken().then(() => this.request(url, config))\n        }\n        return fetch(url, {\n            headers: {\n                Authorization: `Bearer ${this.token.access_token}`,\n            },\n            ...config,\n            signal: this.abortController.signal,\n        })\n            .then(res => {\n                if (res.status === 400) console.error(res.json())\n                if (res.status !== 204) return res.json()\n                else return res\n            })\n            .catch(err => console.error('Spotify API responded with error:', err))\n    }\n}\n\nexport const useSpotify = (): {\n    playerState: SpotifyApi.CurrentPlaybackResponse\n    controller: SpotifyPlayer\n    fetching: boolean\n} => {\n    const [initialFetch, setInitialFetch] = useState(true)\n    const api = useAPI()\n    const [spotify, setSpotify] = useState(new SpotifyPlayer(api))\n    const [playerState, setPlayerState] = useState<SpotifyApi.CurrentPlaybackResponse>(\n        {} as SpotifyApi.CurrentPlaybackResponse,\n    )\n    useEffect(() => {\n        spotify.pollPlayerState((state: SpotifyApi.CurrentPlaybackResponse) => {\n            if (initialFetch) setInitialFetch(false)\n            setPlayerState(state)\n            if (state.item) localStorage.setItem(LAST_PLAYED_TRACK, state.item.id)\n        })\n        return spotify.clearPolling\n    }, [])\n    return { playerState, controller: spotify, fetching: initialFetch }\n}\n","import React from 'react'\nimport { Header } from '../Common/'\nimport { TrackList } from './'\nimport { Search } from '../Search'\nimport { RouteComponentProps } from 'react-router'\nimport { useWebSocket } from '../../utils'\nimport './styles/Spectator.scss'\n\ninterface MatchParams {\n    id: string\n}\n\ninterface Props extends RouteComponentProps<MatchParams> {}\n\nexport const Spectator: React.FC<Props> = React.memo(({ match }) => {\n    const { subscribers, queue } = useWebSocket(match.params.id)\n\n    return (\n        <div className=\"spectator\">\n            <Header color=\"green\" size=\"s\" numSubscribers={subscribers} />\n            <Search queue={queue}>\n                <TrackList onVote={queue.vote} votes={queue.votes} tracks={queue.tracks} />\n            </Search>\n        </div>\n    )\n})\n","import React from 'react'\nimport { TrackType } from '../../utils'\nimport { Heart, HeartOutline } from '../Common'\nimport './styles/TrackList.scss'\n\ninterface TrackListProps {\n    tracks: TrackType[]\n    votes: string[]\n    onVote: (id: string, voted: boolean) => void\n}\n\nexport const TrackList: React.FC<TrackListProps> = ({ tracks, votes, onVote }: TrackListProps) => {\n    return (\n        <div className=\"list-container\">\n            <ul className=\"track-list\">\n                {tracks.map((track, index) => {\n                    const hasVoted = votes.includes(track.queue_id)\n                    return (\n                        <li key={track.queue_id}>\n                            <img src={track.album_s} alt=\"\" />\n                            <div className=\"track-names\">\n                                <div>\n                                    <h3>{track.title}</h3>\n                                </div>\n                                <div>{track.artist}</div>\n                            </div>\n                            <div>\n                                <div>\n                                    {track.votes} vote{track.votes !== 1 && 's'}\n                                </div>\n                                <button onClick={() => onVote(track.queue_id, !hasVoted)}>\n                                    {hasVoted ? <Heart /> : <HeartOutline />}\n                                </button>\n                            </div>\n                        </li>\n                    )\n                })}\n            </ul>\n        </div>\n    )\n}\n","import React from 'react'\nimport { Header } from '../Common/'\nimport './styles/Login.scss'\n\ninterface Props {}\n\nexport const Login: React.FC<Props> = () => {\n    return (\n        <div className=\"login\">\n            <Header color=\"green\" size=\"s\" />\n            <h3>Login</h3>\n        </div>\n    )\n}\n","import React from 'react'\nimport { Start, Redirect, Spectator, Host, Login, URLNotFound } from './components/'\nimport * as ROUTES from './utils/routes'\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom'\nimport './styles/App.scss'\n\n/**\n * TODO:\n *  - Host/Spectator: Lazy-load additional search results\n *  - Host: Fullscreen mode\n *  - Host: Logout / Remove session\n *  - Host: Sync with lyrics from external API\n \n *\n * FIX:\n *  - Abort last search request on cancel\n *  - Strange behaviour when the callback is empty\n *  - Host: Close device list when clicking outside\n */\n\nconst App: React.FC = () => {\n    return (\n        <div className=\"App\">\n            <Router basename={process.env.PUBLIC_URL}>\n                <Switch>\n                    <Route path={ROUTES.START} exact component={Start} />\n                    <Route path={ROUTES.LOGIN} exact component={Login} />\n                    <Route path={ROUTES.ROOM} exact component={Spectator} />\n                    <Route path={ROUTES.HOST} exact component={Host} />\n                    <Route path={ROUTES.REDIRECT} exact component={Redirect} />\n                    <Route>\n                        <URLNotFound />\n                    </Route>\n                </Switch>\n            </Router>\n        </div>\n    )\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './styles/index.css'\nimport App from './App'\nimport { AuthContext, Auth, APIContext, API } from './utils/'\n\nimport * as serviceWorker from './serviceWorker'\n\nReactDOM.render(\n    <APIContext.Provider value={new API()}>\n        <AuthContext.Provider value={new Auth()}>\n            <App />\n        </AuthContext.Provider>\n    </APIContext.Provider>,\n    document.getElementById('root'),\n)\nserviceWorker.unregister()\n"],"sourceRoot":""}